#
# Auto-generated by jaxb2ruby v<%= @version %> on <%= Time.now %> 
# https://github.com/sshaw/jaxb2ruby
#

require "roxml"

<%- @class.requires.each do |mod| -%>
require "<%= mod %>"
<%- end -%>

<%= @class.module.map { |mod| "module #{mod}" }.join " " %>

class <%= @class.name %>
  include ROXML

  <%# if @class.element.namespace -%>    
    #xml_namespaces <%# @class.element.namespace.prefix %> => "<%= @class.element.namespace %>"
  <%#- end -%>

  xml_name "<%= @class.element.name %>"

  <%- @class.element.children.each do |e| -%>
    <%- if e.array? -%>    
      <%# ROXML doesn't like String as an argument to :as ?! %>
      xml_accessor :<%= e.accessor %>, :as => [<%= e.type unless e.type == "String" %>], :from => "<%= e.name %>", :required => <%= e.required? %>

    <%- elsif e.hash? -%>
      xml_accessor :<%= e.accessor %>, :as => {}, :from => "<%= e.name %>", :required => <%= e.required? %>

    <%- elsif [:ID, :IDREF, :boolean, "String"].include?(e.type) -%>
      xml_accessor :<%= e.accessor %>, :from => "<%= e.name %>", :required => <%= e.required? %>

    <%- else -%>
      xml_accessor :<%= e.accessor %>, :as => <%= e.type %>, :from => "<%= e.name %>", :required => <%= e.required? %>

    <%- end -%>
  <%- end -%>

  <%- if @class.element.text? -%>
    xml_accessor :content, :from => ".", :required => <%= @class.element.required? %>
  <%- end -%>

  <% @class.element.attributes.each do |attr| %>
    <%- if attr.type == :boolean || attr.type == "String" -%>
      xml_accessor :<%= attr.accessor %>, :from => "@<%= attr.name %>", :required => <%= attr.required? %>
    <% else %>
      xml_accessor :<%= attr.accessor %>, :as => <%= attr.type %>, :from => "@<%= attr.name %>", :required => <%= attr.required? %>
    <% end %>
  <% end %>
end

<%= @class.module.map { "end" }.join " " %>

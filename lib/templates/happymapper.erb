#
# Auto-generated by jaxb2ruby v<%= VERSION %> on <%= Time.now %>
# https://github.com/sshaw/jaxb2ruby
#
<%- require "templates/util/happymapper" -%>

require "happymapper"
<%- @class.requires.each do |mod| -%>
require "<%= mod %>"
<%- end -%>

<%= @class.module.map { |mod| "module #{mod}" }.join " " %>
<%= @class.outter_class.map { |klass| "class #{klass}" }.join "; " %>

class <%= @class.basename %> <%= "< #{@class.superclass}" if @class.superclass %>
  include HappyMapper

  <%- if @class.element.root? && @class.element.namespace -%>
    register_namespace "<%= @class.element.namespace.prefix %>", "<%= @class.element.namespace.name %>"
    namespace "<%= @class.element.namespace.prefix %>"
  <%- end -%>

  tag "<%= @class.element.name %>"

  <%- @class.element.children.each do |e| -%>
    <% next if e.type == :ID || e.type == :IDREF %>
    <%= accessor_method(e) %> :<%= e.accessor %>, <%= type_name(e) %>, :tag => "<%= e.name %>", :namespace => <%= namespace(e.namespace) %>
  <%- end -%>

  <%- if @class.element.text? -%>
    content :content
  <%- end -%>

  <% @class.element.attributes.each do |attr| %>
      attribute :<%= attr.accessor %>, <%= type_name(attr) %>, :tag => "<%= attr.name %>", :namespace => <%= namespace(attr.namespace) %>
  <% end %>
end

<%= @class.outter_class.map { "end" }.join " " %>
<%= @class.module.map { "end" }.join " " %>
